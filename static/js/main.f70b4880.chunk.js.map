{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","filteredTodos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setFilterSelect","query","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectTodo","useState","user","setUser","useEffect","userId","findedUser","href","email","name","App","visibleTodos","setVisibleTodos","filterSelect","setQeury","todoId","filter","lowerCaseTitle","toLowerCase","lowerQuery","includes","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f70b4880.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[],\n  selectedTodo: number,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  filteredTodos: todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': todo.id === selectedTodo,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )\n              : <></>}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': selectedTodo !== todo.id,\n                  'fa-eye-slash': selectedTodo === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  setFilterSelect: React.Dispatch<string>,\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterSelect,\n  query,\n  setQuery,\n}) => {\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilterSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null,\n  selectTodo: React.Dispatch<React.SetStateAction<number>>\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(findedUser => setUser(findedUser));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(!user || !todo) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [filterSelect, setFilterSelect] = useState('all');\n  const [query, setQeury] = useState('');\n\n  useEffect(() => {\n    getTodos().then(todos => {\n      setVisibleTodos(todos);\n    });\n  }, []);\n\n  const filteredTodos = visibleTodos\n    .filter(todo => {\n      switch (filterSelect) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        case 'all':\n        default:\n          return true;\n      }\n    })\n    .filter(todo => {\n      const lowerCaseTitle = todo.title.toLowerCase();\n      const lowerQuery = query.toLowerCase();\n\n      return lowerCaseTitle.includes(lowerQuery);\n    });\n\n  const todoById = (todoId: number) => {\n    return visibleTodos.find(todo => todo.id === todoId);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterSelect={setFilterSelect}\n                query={query}\n                setQuery={setQeury}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length === 0 && <Loader />}\n\n              {visibleTodos.length > 0\n                && (\n                  <TodoList\n                    filteredTodos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== 0\n        && (\n          <TodoModal\n            todo={todoById(selectedTodo) || null}\n            selectTodo={setSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}